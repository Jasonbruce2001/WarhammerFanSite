// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Warhammer40KFanSite.Data;

#nullable disable

namespace Warhammer40KFanSite.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241204180521_production")]
    partial class production
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Warhammer40KFanSite.Models.Story", b =>
                {
                    b.Property<int>("StoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("StoryAuthor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StoryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("StoryText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StoryTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StoryTopic")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("StoryID");

                    b.ToTable("Stories");
                });

            modelBuilder.Entity("Warhammer40KFanSite.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountAge")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Warhammer40KFanSite.QuizModel.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("QuizID")
                        .HasColumnType("int");

                    b.Property<string>("UserAnswer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("QuestionId");

                    b.HasIndex("QuizID");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Warhammer40KFanSite.QuizModel.Quiz", b =>
                {
                    b.Property<int>("QuizID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("QuizID");

                    b.ToTable("Quizzes");
                });

            modelBuilder.Entity("Warhammer40KFanSite.QuizModel.Question", b =>
                {
                    b.HasOne("Warhammer40KFanSite.QuizModel.Quiz", null)
                        .WithMany("Questions")
                        .HasForeignKey("QuizID");
                });

            modelBuilder.Entity("Warhammer40KFanSite.QuizModel.Quiz", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
